# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      # uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
      uses: snok/install-poetry@v1.3.4
    - name: Install poetry dependencies
      run: poetry install --no-root
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv

  lint:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      # uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv
    - name: Run lint
      run: poetry run task lint
  
  formatter:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      # uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv
    - name: Run formatter
      run: poetry run task formatter

  security:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      # uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv
    - name: Run security
      run: poetry run task security

  unittesting:
    needs: [ build, lint, formatter, security ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      # uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
      uses: snok/install-poetry@v1.3.4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv
    - name: Run unit tests
      run: poetry run task test
        
